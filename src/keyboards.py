"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞."""

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def get_main_menu() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
    keyboard = [
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç—É—Å", callback_data="status"),
            InlineKeyboardButton(text="üë• –ö–ª–∏–µ–Ω—Ç—ã", callback_data="clients"),
        ],
        [
            InlineKeyboardButton(text="üì• Inbounds", callback_data="inbounds"),
            InlineKeyboardButton(text="üì§ Outbounds", callback_data="outbounds"),
        ],
        [
            InlineKeyboardButton(text="üîê TLS", callback_data="tls"),
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
        ],
        [
            InlineKeyboardButton(text="üìù –õ–æ–≥–∏", callback_data="logs"),
        ],
        [
            InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Core", callback_data="restart_core"),
            InlineKeyboardButton(text="üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ App", callback_data="restart_app"),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_back_button() -> InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    keyboard = [[InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_confirm_restart(action: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞."""
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="back_to_menu"),
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_logs_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ª–æ–≥–æ–≤."""
    keyboard = [
        [
            InlineKeyboardButton(text="üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50", callback_data="logs_50"),
            InlineKeyboardButton(text="üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 100", callback_data="logs_100"),
        ],
        [
            InlineKeyboardButton(text="üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 200", callback_data="logs_200"),
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_client_actions(client_id: int, client_name: str) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º."""
    keyboard = [
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data=f"client_info:{client_id}")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="clients")],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_clients_keyboard(clients: list, online_users: list = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞."""
    keyboard = []
    online_set = set(online_users) if online_users else set()
    
    for client in clients[:20]:  # –ú–∞–∫—Å–∏–º—É–º 20 –∫–ª–∏–µ–Ω—Ç–æ–≤
        if isinstance(client, dict):
            client_id = client.get("id")
            name = client.get("name", "Unknown")
            enable = client.get("enable", False)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if name in online_set:
                status = "üü¢"  # –û–Ω–ª–∞–π–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω
            elif enable:
                status = "üü°"  # –ê–∫—Ç–∏–≤–µ–Ω –Ω–æ –æ—Ñ–ª–∞–π–Ω
            else:
                status = "üî¥"  # –û—Ç–∫–ª—é—á–µ–Ω
            
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{status} {name}",
                    callback_data=f"client_info:{client_id}",
                )
            ])
    
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

